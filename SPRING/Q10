JAVA PROGRAM TO DEMONSTRATE APPLICATION CONTEXT AWARE INTERFACE

 ApplicationContextAware is used when an object required.
 
 
 
 package SPRINGNI;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.BeanNameAware;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

public class Triangle implements ApplicationContextAware, BeanNameAware
{
 private Point pointA;
 private Point pointB;
 private Point pointC;
 private ApplicationContext context = null;
 
 public void setPointA(Point pointA) {
  this.pointA = pointA;
 }

 public void setPointB(Point pointB) {
  this.pointB = pointB;
 }

 
 public void setPointC(Point pointC) {
  this.pointC = pointC;
 }

 public void draw()
 {
System.out.println("PointA is ("+pointA.getX()+", "+pointA.getY()+")");
System.out.println("PointB is ("+pointB.getX()+", "+pointB.getY()+")");
System.out.println("PointC is ("+pointC.getX()+", "+pointC.getY()+")");
 }

 @Override
 public void setApplicationContext(ApplicationContext context) throws BeansException
 {
  this.context = context;
 }

 @Override
 public void setBeanName(String beanName)
 {
  System.out.println("Bean name is: "+beanName);
 }
}


#POINT.JAVA

package SPRINGNI;

public class Point
{
 private int x;
 private int y;
 
 public int getX() {
  return x;
 }
 
 public void setX(int x) {
  this.x = x;
 }
 
 public int getY() {
  return y;
 }
 
 public void setY(int y) {
  this.y = y;
 }
}



#SPRING.XML
beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xsi:schemalocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
 <bean autowire="byName" class="SPRINGNI.Triangle" id="triangle"></bean>
  
<bean class="com.dineshonjava.sdnext.contextAware.tutorial.Point" id="pointA">
  <property name="x" value="0"></property>
  <property name="y" value="0"></property>
</bean>
  
<bean class="com.dineshonjava.sdnext.contextAware.tutorial.Point" id="pointB">
  <property name="x" value="-20"></property>
  <property name="y" value="0"></property>
</bean>
  
<bean class="com.dineshonjava.sdnext.contextAware.tutorial.Point" id="pointC">
   <property name="x" value="20"></property>
   <property name="y" value="0"></property>
</bean>
</beans>




DrawingApp.java



package com.sdnext.contextAware.tutorial;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;


public class DrawingApp 
{
 
 public static void main(String[] args) 
 {
ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
Triangle triangle = (Triangle) context.getBean("triangle");
triangle.draw();
 }
}




JAN 25, 2021 1:13:54 PM org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@145d068: startup date [TUE Jan 25 13:16:54 IST 2021]; root of context hierarchy
Jan 25, 2021 1:16:55 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [spring.xml]
Jan 25, 2021 1:16:55 PM org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f11404: defining beans [triangle,pointA,pointB,pointC]; root of factory hierarchy
Bean name is: triangle
PointA is (0, 0)
PointB is (-20, 0)
PointC is (20, 0)
