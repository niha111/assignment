9. JAVA PROGRAM TO DEMONSTRATE COMPLETE BEAN LIFE CYCLE

HelloBean.java(filename)
package beans;

public class HelloBean {

	public void init() throws Exception
	{
		System.out.println(
			"Bean HelloWorld has been "
			+ "instantiated and I'm "
			+ "the init() method");
	}
	
	public void destroy() throws Exception
	{
		System.out.println(
			"Container has been closed "
			+ "and I'm the destroy() method");
	}
}



spring.xml


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans"
xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation = "http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<bean id="hw" class="beans.HelloBean"
			init-method="init" destroy-method="destroy"/>
	
</beans>



#calling the bean initialized

package test;

import org.springframework
	.context
	.ConfigurableApplicationContext;

import org.springframework
	.context.support
	.ClassPathXmlApplicationContext;

import beans.HelloWorld;

// Driver class
public class Client {

	public static void main(String[] args)
		throws Exception
	{

		// Loading the Spring XML configuration
		// file into the spring container and
		// it will create the instance of
		// the bean as it loads into container

		ConfigurableApplicationContext cap
			= new ClassPathXmlApplicationContext(
				"resources/spring.xml");

		// It will close the spring container
		// and as a result invokes the
		// destroy() method
		cap.close();
	}
}
