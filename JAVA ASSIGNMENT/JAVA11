                       ^_^ java11 
                       
                       1.	Write a program to calculate the Simple Interest with minimal code using features of Java 11.
                       •	Hint Use the concept of functional interface and Local variable syntax for lambda parameters.
                       
                       
                       
#CODE

import java.util.Scanner;

public class SimpleIntrest {

	public static void main(String[] args) {
		
		Scanner N = new Scanner(System.in);
		
		System.out.println("Enter the Amount, rate and time: ");
		int p = N.nextInt();
		int rate = N.nextInt();
		int time = N.nextInt();
		
		Interest i = (int a, int b, int c) -> (a*b*c)/100;
		
		int ans = i.calculate(p, rate, time);
		System.out.println(ans);
	}

}

interface Interest
{
	int calculate(int p, int rate, int time);
}

#OUTPUT
Enter the Amount, rate and time: 
300000
5
10


2..	Java 11 supports var keyword for variable declarations. List the scenarios where var keyword cannot be used for such variable declarations, Give reason in support of your answer for each scenario.
•	Scenario 1: var keyword cannot be used as an instance and a global variable
class D
3.3.	A quick brown fox jumps over the lazy dog". Create an ArrayList from the given String. Such an ArrayList should include each word from the given sentence. Finally. convert such List to an array using Java 11 methods and print the output.

#code
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class StringsOp {

	public static void main(String[] args) 
	{
		String str = "A quick brown fox jumps over the lazy dog";
		String words[] = str.split(" ");
		
		List<String> l = new ArrayList<String>();
		for(String text:words) {
	         l.add(text);
		}
		
		System.out.println(l);
		
		//java11 
		String[] array = l.toArray(String[]::new);
		System.out.println("In java 11 features : " + Arrays.toString(array));
		 
	}

}
output
[A, quick, brown, fox, jumps, over, the, lazy, dog]
In java 11 features : [A, quick, brown, fox, jumps, over, the, lazy, dog]




4.	Using features of Java 11, read the data from a text file (File name: StudentList.bt). Calculate the count of students and print the names as well as the total count of students on the screen. (If any line in file doesn't contain a name, for such a record blank space should not be printed in the output)
•	Hint: Use java 11 features of files and String methods to reduce the lines of code to be written.


